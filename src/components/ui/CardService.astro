---
// Componente individual para mostrar un servicio
export interface Props {
  title: string;
  description: string;
  svgIcon: string;
  iconColor?: "blue" | "green" | "yellow" | "purple" | "orange" | "red";
  animationDelay?: number;
}

// Extraer props con valores por defecto
const {
  title,
  description,
  svgIcon,
  iconColor = "blue",
  animationDelay = 0,
} = Astro.props;

// Definir clases de fondo según el color elegido (Mobile First)
const iconBackgroundClasses = {
  blue: "bg-blue-100 text-blue-600",
  green: "bg-green-100 text-green-600",
  yellow: "bg-yellow-100 text-yellow-600",
  purple: "bg-purple-100 text-purple-600",
  orange: "bg-orange-100 text-orange-600",
  red: "bg-red-100 text-red-600",
};

// Calcular delay de animación
const animationDelayValue = `${animationDelay}s`;
---

<div
  class="service-card bg-white rounded-xl p-6 sm:p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 border border-gray-100"
>
  <!-- Icono SVG con círculo de fondo -->
  <div class="service-icon-wrapper mb-6">
    <div
      class={`service-icon w-16 h-16 sm:w-20 sm:h-20 ${iconBackgroundClasses[iconColor]} 
             rounded-xl flex items-center justify-center transition-all duration-300`}
      style={`animation-delay: ${animationDelayValue}`}
    >
      <!-- SVG dinámico desde Strapi -->
      <div class="w-8 h-8 sm:w-10 sm:h-10" set:html={svgIcon} />
    </div>
  </div>

  <!-- Título del servicio -->
  <h3
    class="service-title text-xl sm:text-2xl font-bold text-gray-900 mb-4 leading-tight"
    style={`animation-delay: ${animationDelayValue + 0.1}s`}
  >
    {title}
  </h3>

  <!-- Descripción del servicio -->
  <p
    class="service-description text-base sm:text-lg text-gray-600 leading-relaxed"
    style={`animation-delay: ${animationDelayValue + 0.2}s`}
  >
    {description}
  </p>
</div>

<style>
  /* Variables CSS para personalización */
  :root {
    --service-animation-duration: 0.8s;
    --service-animation-timing: ease-out;
  }

  /* Estado inicial - elementos ocultos y listos para animar */
  .service-icon,
  .service-title,
  .service-description {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity var(--service-animation-duration) var(--service-animation-timing),
      transform var(--service-animation-duration)
        var(--service-animation-timing);
  }

  /* Animaciones que se activan SOLO cuando la tarjeta tiene clase 'animate' */
  .service-card.animate .service-icon,
  .service-card.animate .service-title,
  .service-card.animate .service-description {
    animation: serviceFadeInUp var(--service-animation-duration)
      var(--service-animation-timing) forwards;
  }

  /* Keyframe para la animación de fade in up */
  @keyframes serviceFadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hover especial para la tarjeta completa */
  .service-card:hover .service-icon {
    transform: scale(1.1);
  }

  /* Hover especial para el ícono */
  .service-icon:hover {
    animation-play-state: paused;
  }

  /* Responsive: En móviles, animaciones más rápidas */
  @media (max-width: 640px) {
    :root {
      --service-animation-duration: 0.6s;
    }

    .service-icon,
    .service-title,
    .service-description {
      transform: translateY(15px);
    }
  }

  /* Respeto por prefer-reduced-motion (accesibilidad) */
  @media (prefers-reduced-motion: reduce) {
    .service-card.animate .service-icon,
    .service-card.animate .service-title,
    .service-card.animate .service-description {
      animation: serviceFadeIn var(--service-animation-duration)
        var(--service-animation-timing) forwards;
      transform: none;
    }

    /* Para usuarios con reduced-motion, hacer visible inmediatamente */
    .service-card .service-icon,
    .service-card .service-title,
    .service-card .service-description {
      opacity: 1;
      transform: none;
    }

    @keyframes serviceFadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    /* Deshabilitar hover animations también */
    .service-card:hover {
      transform: none;
    }

    .service-card:hover .service-icon {
      transform: none;
    }
  }

  /* Modo alto contraste - sin animaciones */
  @media (prefers-contrast: high) {
    .service-card .service-icon,
    .service-card .service-title,
    .service-card .service-description {
      animation: none;
      opacity: 1;
      transform: none;
    }

    .service-card:hover {
      transform: none;
    }

    .service-card:hover .service-icon {
      transform: none;
    }
  }

  /* Asegurar que el SVG se ajuste correctamente */
  .service-icon svg {
    width: 100%;
    height: 100%;
    max-width: 2.5rem;
    max-height: 2.5rem;
  }

  @media (min-width: 640px) {
    .service-icon svg {
      max-width: 2.5rem;
      max-height: 2.5rem;
    }
  }

  /* Mejoras de accesibilidad para focus */
  .service-card:focus-within {
    outline: 2px solid theme("colors.blue.500");
    outline-offset: 2px;
  }

  /* Transiciones suaves para todos los estados */
  .service-card * {
    transition: all 0.3s ease;
  }
</style>
