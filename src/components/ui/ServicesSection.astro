---
import CardService from './CardService.astro';
import strapi from '../../utils/strapi';
import type { StrapiEntity, Service } from '../../types/strapi';

// Props para personalizar la secci√≥n
export interface Props {
  title?: string;
  subtitle?: string;
  backgroundColor?: 'white' | 'gray-50' | 'blue-50' | 'primary-50';
  sectionId?: string;
  maxServices?: number;
}

// Extraer props con valores por defecto
const { 
  title = "Nuestros Servicios",
  subtitle = "Ofrecemos una gama completa de servicios dise√±ados para abordar todas tus necesidades",
  backgroundColor = 'blue-50',
  sectionId = 'services-section',
  maxServices = 6
} = Astro.props;

// Obtener servicios desde Strapi
let services: StrapiEntity<Service>[] = [];
let error: string | null = null;

try {
  console.log('üîç Obteniendo servicios activos desde Strapi');
  const servicesResponse = await strapi.getServices({
    filters: { isActive: { $eq: true } },
    sort: ["order:asc"]
  });
  services = servicesResponse.data || [];
  
  // Limitar n√∫mero de servicios si se especifica
  if (maxServices && services.length > maxServices) {
    services = services.slice(0, maxServices);
  }
  
  if (services.length > 0) {
    console.log(`‚úÖ ${services.length} servicios encontrados`);
  } else {
    console.log('‚ö†Ô∏è No hay servicios activos, usando fallback');
    // Fallback con servicios hardcodeados si no hay contenido en Strapi
    services = [
      {
        id: 1,
        documentId: 'fallback-1',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Detecci√≥n de Fugas",
        description: "Tecnolog√≠a avanzada para localizar y reparar fugas ocultas de manera eficiente.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7.5 13.5L10 16l6-6"/>
        </svg>`,
        iconColor: "blue" as const,
        order: 1,
        isActive: true,
        featured: true
      },
      {
        id: 2,
        documentId: 'fallback-2',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Limpieza de Drenajes",
        description: "Soluciones efectivas de desbloqueo y limpieza integral de sistemas de drenaje.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
        </svg>`,
        iconColor: "green" as const,
        order: 2,
        isActive: true,
        featured: true
      },
      {
        id: 3,
        documentId: 'fallback-3',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Calentadores de Agua",
        description: "Instalaci√≥n, servicio y reparaci√≥n profesional de calentadores de agua residenciales y comerciales.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
        </svg>`,
        iconColor: "orange" as const,
        order: 3,
        isActive: true,
        featured: false
      },
      {
        id: 4,
        documentId: 'fallback-4',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Ba√±os y Cocinas",
        description: "Servicios integrales de plomer√≠a para cocinas y ba√±os con acabados de primera calidad.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
        </svg>`,
        iconColor: "purple" as const,
        order: 4,
        isActive: true,
        featured: false
      },
      {
        id: 5,
        documentId: 'fallback-5',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Filtraci√≥n de Agua",
        description: "Asegura agua limpia y segura con nuestros confiables sistemas de filtraci√≥n.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
        </svg>`,
        iconColor: "blue" as const,
        order: 5,
        isActive: true,
        featured: false
      },
      {
        id: 6,
        documentId: 'fallback-6',
        createdAt: '',
        updatedAt: '',
        publishedAt: '',
        title: "Reparaci√≥n de Tuber√≠as",
        description: "Servicios confiables de reparaci√≥n y reemplazo para tuber√≠as da√±adas.",
        svgIcon: `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
        </svg>`,
        iconColor: "red" as const,
        order: 6,
        isActive: true,
        featured: false
      }
    ] as any;
  }
} catch (e) {
  error = e instanceof Error ? e.message : 'Error loading services';
  console.warn('‚ö†Ô∏è Services loading failed, using fallback:', error);
  // Tambi√©n usar fallback en caso de error
  services = [];
}

// Definir clases de fondo para la secci√≥n
const sectionBackgroundClasses = {
  'white': 'bg-white',
  'gray-50': 'bg-gray-50', 
  'blue-50': 'bg-blue-50',
  'primary-50': 'bg-primary-50'
};
---

<section 
  id={sectionId}
  class={`services-section py-16 sm:py-20 md:py-24 lg:py-32 ${sectionBackgroundClasses[backgroundColor]}`}
>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    
    <!-- Encabezado de la secci√≥n -->
    <div class="section-header text-center mb-12 sm:mb-16 md:mb-20">
      <h2 class="section-title text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-heading font-bold text-white mb-6 sm:mb-8">
        {title}
      </h2>
      <p class="section-subtitle text-lg sm:text-xl md:text-2xl text-blue-100 max-w-3xl lg:max-w-5xl mx-auto leading-relaxed">
        {subtitle}
      </p>
    </div>

    <!-- Grid de servicios -->
    <div class="services-grid relative">
      
      {services.length > 0 ? (
        <!-- Grid responsivo con servicios din√°micos -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8 md:gap-10 lg:gap-12">
          {services.map((service, index) => {
            const animationDelay = index * 0.15; // Delay escalonado para animaciones
            
            return (
              <div 
                class="service-wrapper"
                data-service-index={index}
              >
                <CardService 
                  title={service.title}
                  description={service.description}
                  svgIcon={service.svgIcon || ''}
                  iconColor={service.iconColor}
                  animationDelay={animationDelay}
                />
              </div>
            );
          })}
        </div>
      ) : (
        <!-- Estado vac√≠o o error -->
        <div class="text-center py-12 sm:py-16">
          <div class="w-16 h-16 sm:w-20 sm:h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8 sm:w-10 sm:h-10 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
            </svg>
          </div>
          <h3 class="text-xl sm:text-2xl font-semibold text-white mb-4">No hay servicios configurados</h3>
          <p class="text-blue-100 text-lg">Los servicios se mostrar√°n aqu√≠ una vez configurados en Strapi.</p>
        </div>
      )}

    </div>

    <!-- Slot para contenido adicional -->
    <div class="section-extra mt-16 sm:mt-20 md:mt-24">
      <slot name="extra-content" />
    </div>

  </div>
</section>

<style>
  /* Variables CSS para personalizaci√≥n de la secci√≥n */
  :root {
    --services-animation-duration: 1s;
    --services-animation-delay: 0.2s;
  }

  /* Fondo azul como en la imagen de referencia */
  .services-section {
    background: linear-gradient(135deg, #1e40af 0%, #3730a3 50%, #1e3a8a 100%);
  }

  /* Animaciones para el encabezado de la secci√≥n - estas S√ç se ejecutan al cargar */
  .section-title,
  .section-subtitle {
    opacity: 0;
    transform: translateY(30px);
    animation: servicesSectionFadeInUp var(--services-animation-duration) ease-out forwards;
  }

  .section-title {
    animation-delay: 0.1s;
  }

  .section-subtitle {
    animation-delay: 0.3s;
  }

  /* El contenedor de servicios ser√° visible inmediatamente, las animaciones las manejan las tarjetas individuales */
  .services-grid {
    opacity: 1;
    transform: none;
  }

  /* Keyframe para animaciones de secci√≥n */
  @keyframes servicesSectionFadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive: En m√≥viles, animaciones m√°s r√°pidas */
  @media (max-width: 768px) {
    :root {
      --services-animation-duration: 0.7s;
    }
    
    .section-title,
    .section-subtitle {
      transform: translateY(20px);
    }
  }

  /* Respeto por prefer-reduced-motion (accesibilidad) */
  @media (prefers-reduced-motion: reduce) {
    .section-title,
    .section-subtitle {
      animation: servicesSectionFadeIn var(--services-animation-duration) ease-out forwards;
      transform: none;
    }

    @keyframes servicesSectionFadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  }

  /* Modo alto contraste - sin animaciones */
  @media (prefers-contrast: high) {
    .section-title,
    .section-subtitle {
      animation: none;
      opacity: 1;
      transform: none;
    }
  }
</style>

<!-- Intersection Observer Script para animaciones en scroll -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Verificar si el usuario prefiere animaciones reducidas
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    if (prefersReducedMotion) {
      // Si prefiere reduced motion, hacer todas las tarjetas visibles inmediatamente
      document.querySelectorAll('.service-card').forEach(card => {
        card.classList.add('animate');
      });
      return;
    }

    // Configuraci√≥n del Intersection Observer
    const observerOptions = {
      threshold: 0.1, // Se activa cuando 10% del elemento es visible
      rootMargin: '0px 0px -50px 0px' // Peque√±o margen para activar un poco antes
    };

    // Crear el observer
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const serviceWrapper = entry.target;
          const serviceIndex = parseInt(serviceWrapper.getAttribute('data-service-index') || '0');
          const serviceCard = serviceWrapper.querySelector('.service-card');
          
          if (serviceCard) {
            // Aplicar delay escalonado basado en el √≠ndice del servicio
            setTimeout(() => {
              serviceCard.classList.add('animate');
              console.log(`‚ú® Service ${serviceIndex + 1} animado`);
            }, serviceIndex * 100); // 100ms entre cada servicio
          }
          
          // Dejar de observar este elemento una vez animado
          observer.unobserve(serviceWrapper);
        }
      });
    }, observerOptions);

    // Observar todos los service wrappers
    const serviceWrappers = document.querySelectorAll('.service-wrapper[data-service-index]');
    serviceWrappers.forEach(wrapper => {
      observer.observe(wrapper);
    });

    // Cleanup function para el observer
    window.addEventListener('beforeunload', () => {
      observer.disconnect();
    });
  });
</script>
