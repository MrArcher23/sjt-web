---
import { Image } from 'astro:assets';

// Definir la interfaz de Props según documentación de Astro
export interface Props {
  title: string;
  subtitle: string;
  buttonText: string;
  buttonLink?: string;
  image?: {
    src: string;
    alt: string;
    width?: number;
    height?: number;
  };
  backgroundColor?: 'blue' | 'primary' | 'accent';
}

// Extraer props con valores por defecto
const {
  title, 
  subtitle, 
  buttonText, 
  buttonLink = '#services',
  image,
  backgroundColor = 'primary'
} = Astro.props;

// Definir clases de fondo según el color elegido
const backgroundClasses = {
  blue: 'bg-gradient-to-br from-blue-600 to-blue-800',
  primary: 'bg-gradient-to-br from-primary-600 to-primary-900', 
  accent: 'bg-gradient-to-br from-accent-500 to-accent-600'
};
---

<section class={`relative overflow-hidden ${backgroundClasses[backgroundColor]} text-white`}>
  <div class="container mx-auto px-4 py-16 lg:py-24">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      
      <!-- Contenido del lado izquierdo -->
      <div class="space-y-8">
        <!-- Título principal -->
        <h1 class="hero-title text-4xl md:text-5xl lg:text-6xl font-heading font-bold leading-tight">
          {title}
        </h1>
        
        <!-- Subtítulo/Descripción -->
        <p class="hero-subtitle text-xl md:text-2xl text-blue-100 leading-relaxed max-w-2xl">
          {subtitle}
        </p>
        
        <!-- Contenido adicional via slot (opcional) -->
        <div class="hero-additional text-lg text-blue-50">
          <slot name="additional-content" />
        </div>
        
        <!-- Botón principal -->
        <div class="pt-4">
          <a 
            href={buttonLink}
            class="hero-button inline-flex items-center gap-2 px-8 py-4 bg-yellow-400 hover:bg-yellow-500 
                   text-gray-900 font-semibold text-lg rounded-lg shadow-lg hover:shadow-xl 
                   transform hover:scale-105 transition-all duration-200"
          >
            {buttonText}
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
        
        <!-- Rating/Testimonios (si se proporcionan) -->
        
      </div>
      
      <!-- Imagen del lado derecho (opcional) -->
      {image ? (
        <div class="hero-image relative">
          <div class="bg-gradient-to-br from-yellow-400 to-yellow-500 rounded-3xl p-8 shadow-2xl transform rotate-3">
            <div class="bg-white rounded-2xl overflow-hidden transform -rotate-3">
              <Image 
                src={image.src} 
                alt={image.alt}
                width={image.width || 800}
                height={image.height || 600}
                format="webp"
                quality="high"
                class="w-full h-auto object-cover"
                loading="lazy"
              />
            </div>
          </div>
          
          <!-- Elementos decorativos -->
          <div class="absolute -top-4 -left-4 w-20 h-20 bg-yellow-400 rounded-full opacity-20"></div>
          <div class="absolute -bottom-6 -right-6 w-32 h-32 bg-blue-300 rounded-full opacity-10"></div>
        </div>
      ): null}
      
      <!-- Slot para contenido personalizado del lado derecho -->
      <div class="hero-right-content lg:col-start-2">
        <slot name="right-content" />
      </div>
    </div>
  </div>
  
  <!-- Slot para contenido adicional en la parte inferior -->
  <div class="container mx-auto px-4 pb-8">
    <slot name="bottom-content" />
  </div>
  
  <!-- Elementos decorativos de fondo -->
  <div class="absolute top-0 right-0 w-96 h-96 bg-blue-400 rounded-full opacity-5 transform translate-x-48 -translate-y-48"></div>
  <div class="absolute bottom-0 left-0 w-64 h-64 bg-yellow-400 rounded-full opacity-5 transform -translate-x-32 translate-y-32"></div>
</section>

<style>
  /* Variables CSS para personalización */
  :root {
    --hero-animation-duration: 0.7s;
    --hero-animation-delay-base: 0.2s;
    --hero-animation-stagger: 0.2s;
  }

  /* Animación base sutil y profesional */
  .hero-title,
  .hero-subtitle,
  .hero-additional,
  .hero-button,
  .hero-rating,
  .hero-image,
  .hero-right-content {
    opacity: 0;
    transform: translateY(15px);
    animation: heroFadeInUp var(--hero-animation-duration) ease-out forwards;
  }

  /* Delays secuenciales para cada elemento */
  .hero-title {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 0);
  }

  .hero-subtitle {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 1);
  }

  .hero-additional {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 2);
  }

  .hero-button {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 3);
  }

  .hero-rating {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 4);
  }

  .hero-image {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 2.5);
    transform: translateY(15px) translateX(10px); /* Ligero movimiento lateral para la imagen */
  }

  .hero-right-content {
    animation-delay: calc(var(--hero-animation-delay-base) + var(--hero-animation-stagger) * 3);
  }

  /* Keyframe de la animación */
  @keyframes heroFadeInUp {
    from {
      opacity: 0;
      transform: translateY(15px) translateX(0);
    }
    to {
      opacity: 1;
      transform: translateY(0) translateX(0);
    }
  }

  /* Para la imagen, keyframe especial con movimiento lateral */
  .hero-image {
    animation-name: heroFadeInUpSide;
  }

  @keyframes heroFadeInUpSide {
    from {
      opacity: 0;
      transform: translateY(15px) translateX(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0) translateX(0);
    }
  }

  /* Responsivo: En móviles, animaciones más rápidas */
  @media (max-width: 768px) {
    :root {
      --hero-animation-duration: 0.5s;
      --hero-animation-stagger: 0.15s;
    }

    .hero-title,
    .hero-subtitle,
    .hero-additional,
    .hero-button,
    .hero-rating,
    .hero-image,
    .hero-right-content {
      transform: translateY(10px);
    }
  }

  /* Respeto por prefer-reduced-motion (accesibilidad) */
  @media (prefers-reduced-motion: reduce) {
    .hero-title,
    .hero-subtitle,
    .hero-additional,
    .hero-button,
    .hero-rating,
    .hero-image,
    .hero-right-content {
      animation: heroFadeIn var(--hero-animation-duration) ease-out forwards;
      transform: none;
    }

    @keyframes heroFadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  }

  /* Modo alto contraste - sin animaciones */
  @media (prefers-contrast: high) {
    .hero-title,
    .hero-subtitle,
    .hero-additional,
    .hero-button,
    .hero-rating,
    .hero-image,
    .hero-right-content {
      animation: none;
      opacity: 1;
      transform: none;
    }
  }
</style>
